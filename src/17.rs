use std::collections::HashSet;

fn main() {
    println!("Part 1 is {}", part1(input()));
}

const STOP: usize = 2022;

fn part1(input: &'static str) -> i32 {
    let all_shapes = vec![
        vec![(0, 0), (1, 0), (2, 0), (3, 0)],
        vec![(1, 2), (0, 1), (1, 1), (2, 1), (1, 0)],
        vec![(0, 0), (1, 0), (2, 0), (2, 1), (2, 2)],
        vec![(0, 0), (0, 1), (0, 2), (0, 3)],
        vec![(0, 0), (1, 0), (0, 1), (1, 1)],
    ];

    let mut shapes = all_shapes.iter().cycle();

    let jets = input
        .chars()
        .map(|char| match char {
            '>' => 1,
            '<' => -1,
            _ => panic!(),
        })
        .cycle();

    let mut map = HashSet::new();
    let mut shape = None;
    let mut max = -1;
    let mut blocks_blocked = 0;
    for jet in jets {
        let current_shape = shape.unwrap_or_else(|| {
            let new_shape = shapes.next().unwrap().clone();
            let (blocked, new_shape) = move_shape(&map, new_shape, (2, max + 4));
            assert!(!blocked);

            print_map(
                "New shape",
                &map,
                Some(new_shape.iter().cloned().collect()),
                max,
            );

            new_shape
        });

        let (_, current_shape) = move_shape(&map, current_shape, (jet, 0));
        print_map(
            &format!("Jet {jet}"),
            &map,
            Some(current_shape.iter().cloned().collect()),
            max,
        );

        let (blocked, current_shape) = move_shape(&map, current_shape, (0, -1));
        print_map(
            "Rock falls 1 unit:",
            &map,
            Some(current_shape.iter().cloned().collect()),
            max,
        );

        if blocked {
            for position in current_shape.into_iter() {
                if position.1 > max {
                    max = position.1;
                }

                map.insert(position);
            }
            blocks_blocked += 1;
            if blocks_blocked == STOP {
                break;
            }

            print_map("Blocked", &map, None, max);

            shape = None;
        } else {
            shape = Some(current_shape);
        }
    }

    max + 1
}

fn print_map(
    context: &str,
    map: &HashSet<(i32, i32)>,
    shape: Option<HashSet<(i32, i32)>>,
    max: i32,
) {
    // println!();
    // println!();
    // println!("{context}");
    // for y in (-1..=max + 5).rev() {
    //     for x in -1..=7 {
    //         if y == -1 {
    //             print!("-");
    //             continue;
    //         }

    //         if x == -1 || x == 7 {
    //             print!("|");
    //             continue;
    //         }

    //         let has_shape = if let Some(shape) = &shape {
    //             shape.contains(&(x, y))
    //         } else {
    //             false
    //         };

    //         if has_shape {
    //             print!("@");
    //         } else if map.contains(&(x, y)) {
    //             print!("#");
    //         } else {
    //             print!(".");
    //         }
    //     }
    //     println!();
    // }
}

fn move_shape(
    map: &HashSet<(i32, i32)>,
    shape: Vec<(i32, i32)>,
    delta: (i32, i32),
) -> (bool, Vec<(i32, i32)>) {
    let new_shape: Vec<_> = shape
        .iter()
        .map(|(x, y)| (x + delta.0, y + delta.1))
        .collect();
    let collision = new_shape
        .iter()
        .any(|(x, y)| *x < 0 || *x > 6 || *y < 0 || map.contains(&(*x, *y)));

    if collision {
        (true, shape)
    } else {
        (false, new_shape)
    }
}

#[test]
fn test() {
    assert_eq!(3068, part1(">>><<><>><<<>><>>><<<>>><<<><<<>><>><<>>"));
}

fn input() -> &'static str {
    "><<<<>><<<<>>>><>>><<<<>>>><<<>>><<<>>>><<>>><<<<><<<<>>>><<<>><>><>>>><<>><<<><<>><<<<>>>><<>>><<<>>>><<<<>>><<<>>><<<<>>>><<<<><>><>>><<>>>><><<>><<>>>><<>>><<<>><<<<>>><<>>>><>>>><<<>>>><<<<>><>><<<<>><>>><<>>><>>>><<<<>>><<>>><<<><<<><>><<<<>>><<<<>><<<<><<>>><>>><<>>>><<<<>>>><<<>>><<<><>>>><<<<>><<<<>><>>>><<<>>><>>>><>><<<<>>>><<<<>><<>>><<>>>><<<>><<<<><<<<><<<>>>><>>><>><<>><>>><<<>>><<<>>>><<>>>><><<<<>>><<<<>>><<<>>><>>>><<<>>><>>><<<<>><<<<>>>><><<<>>>><<<>>><<<<><<<<>>><>><<><>>>><<<<>><>><<<<>>><>>><<>>>><>>>><<<>>><<<<>>><<>>><><<>>><>>><<<>>>><>><<<><<<><>>><<><<<>>>><<<<>>><<<>><<<>><<<<>><>>><<<><<<>>><<<><<<<><<>><<><>>>><<>>><<<<><<<>>>><<><<<<>>><<>>>><<<<>><<>>>><<>>><<<><<<>><<<>>><<>><<>>><<>><<>><<<><<<<>>><><<<<>>><<<<>>><>>><<<<>><<><<<<><<<<>>>><<>><<>>><<<<>><>><<<<><>>><<<>>>><<<><<>>><<>><<>>><<<>>><<>>>><<>><<<>>>><<>>>><<>>>><><<<<><<<<><<<<>>>><>>>><<>>>><>><<<>>>><<<>>><<<<>><<<<>>>><<<<>><<<>>><<<>>>><<<>>><<<<><<<>>><<><>>>><>><>>>><<><<<<><<<<>><<<<>>>><>>>><>><<>><<<><<<><<<>><<<>>><>>>><>><<>><<<<>>>><>>>><<<<>>>><<>>><<<>><>><<>>><<<<>>>><>>>><<<<>>>><>>><<<>>>><<<>><<<<>>><<<>>><<>>><<<<>>>><<<><<<>>><<<<>><<<<><>>>><<<>>><<<<>><<>><<<<><<<<>>>><>>><><<<>>><<<>>><>><<>>><>>><><<<>><<<<>>><<<><<<>><<<<><<<<><>>>><<<><<>><>>>><<>>>><><<>><<>>>><<>>><<<<>><<<<>>>><>>><<>><<<<><<<<>>>><<>><<<>>>><<>>>><<<>>><<<>>><<<<><<>>><<<>><<<>><<<<>>><>>>><<<<>>><>>>><<<<>><<>>><<<>>>><<>><>>><<<<>>>><<<>>><<<<><>>><<><<><<>>>><<>><<>>><<<<>>><><>>><>><<<<>>>><>>>><<<><><<>>>><<<<>>><<<<>>>><>>>><<><><><>><<><<>>><<>>><<<>>>><<<><<<>><<>>>><>>>><><<<<><<<<>><<>><<><<<>>>><<<<>>>><>>><<<>>><>><><<<>>><<>>>><<<><>>>><<<>><>><<<>><<<<>>><>>>><<><<<<><<<>><<<><>>><<<<>>><<>>><<<<>><<><<<>>>><<<>><<<>>>><<><<<><>><<<><<<>><<<<><>>><<<<><>><<<><<>><<>>>><>>><>><><<<<>>><<<<>><<<>>><<><<<<>>>><<<<>><><<><<><<<><<<>>>><<>><<>>><<>><<<>>><<<<>>><<<<>><<<>>>><<<>>>><>>>><<<<><><<<<>><<>>>><>><<<<>><>>>><<>>><<<><<<>><<<>><<<>>>><<>>>><<<>>><>>>><<>>>><<>><<<<>>>><<<>>>><<><<<>>>><<>>><<>>>><>><<<<><<>>><<<>>><<<<>><<><<<>>>><>><<>>><<<><<><<<><<<><<>>><<<<>>><<<<><<><>><>>>><>>>><<<>><<<>>>><<<<>>><<>>><<>>>><<<<>>><<>>><<<<>>><<<<>>>><<<<>>><><>><<<<><<<<>>><<<>>><<<><>><>><<<<><<<<>><<><<>>>><>>>><<<>><<<<>>>><<>><<<<>>><><<>>><>>><<<><>>><<<><<<<><<<>><>>>><><<<<>>>><<><<<><<<<>><>>>><<><<<<>>><>>><<<>>><<<<><<<>>>><>>>><<<>>><<>><>>>><<>>><<><>>><<<<><<<<>>>><<>>><<>><<<>>><<><<>>>><><<<<>>><<<<><>>>><>>><<<><><<<<>><<>>><<<<>>>><><<><<<<>><<<>><<>>><><<<<><<<<><>>><<>>><>><<<>><<><<<>>>><<<>>>><<<>>>><>>>><>>>><<<><<>>>><><<<<><>>>><<<>>><<<><<<<><<<>><<><<>>><<<><><><<<>>>><<<<>>>><<>><<<>><<>>><><<<<>><<>>>><>>><<<<>><<<<>><<<>>><<<>>>><<><><<<>><<<<>><<<<>>><><>><<<<>><>>><<<<><<<><<<>><>><<<><>>>><<<><<>><<<>>>><<<<><<<<><<<>><<>>><<>>>><<>><<<>>>><<>>><<<><<>>><<>><<>>>><<<<>>><<><<<<>>>><<<<>>><<<>>><<<>>>><<>><<<<><><<<<>>>><>><>><>>><<<<>><<<<>><<><>><<<<>><<<>>><>><<<>><>>><<><<<>>>><><<<<><<<>>>><<<>><>><>><<>><<<>><<<<>>><>>>><<<>>>><<<<>>><>>>><<<<>>><>>><<>><<><<<<><<<>><<>><<<<>>><<>>><<>>><<<<>>><<<>><>>>><<<>><<<<>>>><<>>>><>>>><<<<>><>>><<>>><>>><<>>><<<><<<<><>><<<<><><<<<><>>><<<<>><<<>>><<<>><<<><<<<>>>><><>><<<>>><><<<<>><<>>><>>>><><>>>><><<<>>><<><>>>><><<<<><<<<>><<>><<<<><<<>>>><>>><<>>><>><<<<>>><<>>><<>>><<<<>>><<<><>>><><<<<>>>><<<>>>><>>>><<<<>><<<>><<<>><<<<>><<<<>>>><<><>>>><>>><>>><<<<>>><<<>>><<<<>>>><<<>>>><<>><<<<>><<<>>>><<<><<<>>><<<<><<<<>><>><<>>><><<<<>>><>><<<>>>><<>>>><<<<>>><<><<>>><<<<>>><<<>><<<<>><<>>>><<<<>>>><<<<>>>><<>>>><>>><<<>>><<<<>>>><<><<>><<<<>><<<>>>><<>><<<>>>><>>><<<<>>><><>>><<>><<<>>><<<<><<<<><<><<<<>>><<<><<<<>><<<>><>><>>><>>><<<<>>>><<<>>>><<<>>><>>><><<<<>>><<<>><<>>><<<>>><<<><<<><>><<<>>>><<<>>>><<<<><><<<>><<<>>><<<>>>><<<<>>>><<<<><>><>>><<>>><<<<><<<<>>><<><<<>>><<><<<<><<>>><<>>><>>>><<>>><><><<<><><><<>>><>><<<<>><<<<><>><<<<>>>><<><<<><<>>>><><<<<>><><>><<<<><<<>>><<><<<>><<>><<<>><<<>><<><<<>>>><>>><<<>><<>><<<<>><<<><<>>><<<<><<>>>><>><<>><<<>>><<>>>><<><><<<<><>><<>>>><><<>>>><<<>>>><<<<>>>><>>><><<<>>>><>><<<>><<<<>>><>>>><<><<<>>>><>>><<>><<<>>><<<>>>><<>>><<<><<<>>><<<<>><<<><<>>>><><<<>>>><<<<>>>><<><<<<><><<>>><<<>>><<<><<<>><<<<>>><<>><>>>><<<><>>>><<<><><>>><<<>>><<<<>><<><<<>><<>><<<<>>><<<>><<>>><<<<>>>><<<>><<<<>>>><<<><<>><<<>>>><<>>>><<<<>>><>>><<><<><<<>>><>><>>>><<<><<<><<>><<>>><>><<<><<<<>>><><<>>>><>>>><>>><<<<>><<><<<>>>><>>><<>>><<<><<<<>>><<>>><<<<>><<<><<>>>><>>>><<<>><<<<>>>><<<><>>>><<<<>>><<<<>>><<>><<>><<<<><<<<><<<<>>><>>><<<>>>><<><<<><<<<>>>><<<<>>><<<<>><<<>>>><<<<><<>>><<>><>><<>><><<<>><>>>><><<><<<>>>><<<<>>><>><<<<>>><>>><<>>>><<>>>><<<>><<>>><<><<<<>>><<>>><>>>><<<>>>><<>>><><<<>>>><<<<>>><<<<><<<<><><<><>>><><<>>><><<<<>><<<<>>><<<>><<>>>><<<<>>><<<><<<><>>><<<<><<<<><<>>><<><<>>>><<<<>>><><<><<<><<<<>>>><<><<>><><>>><<<>><<><<<<>>><<><<<<><<<<>><<>>>><<>>>><<>><<<>><>><<<>>>><>>><>>><<<>>><<<<>>><>>>><<>>><<<<>>>><<<<>>>><>>><<<><<<<>><<>>><<<>>><<>>><<><<<>>>><><<>><<>>><<<<>><>>>><<>><><<<<>>><><<<><><<>>>><<<>>><<<<>>>><<>>><<><<>>><<>><>><<>>><<<<>>>><<<<>>>><>>><<<<><<>><<<<><<>><<<>><<<<><<>>><<<<>>><<<><<<<>>>><<<<>>>><>>><<<<>>><>>><>><<<<>><<<>>><<>>>><>>>><<<<>>><>><><>>>><><>><>>><<<<>><<<<>>>><<<<><><<<>><<>>><<<>><<<><<<<>><>>>><<><<<><>>><><<<<>>><<>>>><>>>><<<>>>><<<><>>><<<>><<<<>>><<<>>><<<>>>><<>><>>><><<<<><<>>><>>>><<<>>>><>><<><<<>><<<>>><<>>>><>>><<>>>><>><<>><>>><<>><<>>>><<<<>>><<><<><<<<>>><<<>>><<><<>>><<>>>><<<>><<<>>>><>>><<>>><<<>>>><>>><>>><<><>>><<>>>><<>><>>><><<>>><<<<>>>><<<<>>><<>><<>>><<<<><>><<>>><<>>><><<<<><>><<<<><<>>><<>>>><<<<>>>><>>><<<>>>><>>><<<<>><>><>><><><>>><>><<<<><<<><<<<>>>><<><<>><>><<<>><<<<>><>>>><><<<<>>><<><>>><<<<><<<<><<<><<<>>><<<>>><>>>><<<>><<<<><<<<>>><>><<<<>>>><>>><<><<<>>>><<<>>>><<<><<<>><<>>><<<<>>><<<<>>>><<>>><>>>><>>><<<<><<>><>>><<>>><<<><<>>>><<>>><<<<><>>>><<<<>>><<><<<><<<><<<<>>><<<<>><<<<>><<<>><<<<>>>><>>><>>><<><<<<>>>><<<<>><>>><>>>><<<>><<>>>><><<>>>><<<>>>><<<>><<<>><<<<>>>><<<<><<<><<>>>><>>>><>><<><<>>><<<><<>>>><<>>><<>>>><<<<>>>><<<<><<<<>>><><>>><<<<>><<<<>><>>>><<>><>>>><<<<>>>><<<<>><<<><><<<<>>><<<<>>><>><>>><<>><<<>>><<<<>><<<<>>>><<<><<<<><<<<>>><<<<>><<<>>>><<<<>><>>><<>>>><<>>><<<<>>><<<<><<<><<<<>>>><<<>><<<>><>>>><<<<>>>><<<><<<>>>><<<><<<<>>><>>><>>>><<<>>><<<<>>><><<<>>>><<<<>><<>>>><>>><<<<>><<<<>>>><<<>>><>>><>>><<<<>><<<<>>>><<>>><<<<>><<<<>>><<<><<>><<<<>>><<<<>>>><>>>><>>><<>>>><<<<><<<>><<><<>>>><<>><<<<>><><><<<<>>>><<>><<>>><<<<>><><<<<><<<<>>>><<<>>>><<><<<<>><<>>>><<<>>><<<<><<<<><<<<>>><<<<>><><<<><<<<><<<><<>><<<<>><>>>><<<><>>>><<<<><<>>>><>><>>><<<><<><<<<>>><<<>>>><<<>>><<>><<<<><<>>><<>>><<<<>>><<<>>>><<>>>><<>>><<<>>>><>>>><<<<><<<<>>>><<<><<<><>>>><<<<><><<<><<<><<<<>><<<<>>><><<<<>>><<>>>><<><><<><<<<>>>><<><<><<<>>>><<><<>><>>><<<<><<><<<<>>>><<<><<<><<<<><>>><<<>><>>><<><<><<<>><<<><<<<><><>>><><><<<>><<<>>>><<<>><>><<>>>><>><<>><<><>><<><<<>><<<>>><<>><>><<<<>>>><<<<><<><<<>>><<<<>>><>>>><<<>><<<<>><<<<>>><><<<>><>><<<<><<<>>>><<<<>><>><<<<>><<>>>><<<<>>>><<><<<<>><<<>><>><><<<<>><>><<>>><>>><<>><<<><<>>><<>>><>>><>>>><<<>>>><<<<>><<<<>>>><><<<<><<><<<><<>>>><<>>><<<<>>><<<><<<>><>><>><<>><<<>>><><<>><<<<>>>><<>><<<<>>>><<><<<>>><<<<><<<<>>>><>>><<<<>><<<>>><<<><>><><<<>><<>>>><><<>>><<<<>><>>>><<<<><<<<>>><<<<>>>><<<>><<<<><>><><<>><<<>>><<<><>><<>>><<<<>>><<>>><>>><<<<>><<>>>><>>><>><<<>><<<>>>><<>>>><<<><<>>>><<<<><<<<><<<>><<<><<<<>>>><<<>><>>><<<>>><<<>><<<<>><<<<>>>><<<<><<>>><<>><>>><<<>><<<<><<>><<>>><<><<<><<<<>>>><<<<>>><<<>>>><>><<<><<<<>>><<<>>><<>><>><>><<<<>>>><<>>><<>><<>><>><<<<><<>><<<><<<><<<<>><>>>><<<>>><>><<<<>><<<><>>>><>><>><<><<>>><>>><>>>><<<>>><<<<><<<<><<>>><<<>>><><><<<>>><<<>>><<<<>>><><<<<>>><<<>>><>>>><<<<>>><<>>><<><<<>>>><<<>><<<<>>>><<>><>>>><<><>><<<>>>><<<<><>>>><<<>>>><<<<>>><><<><<<>><>>><<<>><<<<>>><><><<>>><<<<>><>><<<<><>>><<>>><<<<><<<<>><>>>><<><<>><<<<>>><<<>><<>>><>>>><>>>><<>>>><<<<>>><<<<><<<><><<<<>>><<>><<<>>>><<><<<>><>>><<>>>><<<<>><<><<<<>>><<>><<<<><<<>><<<>>><<>><<<<><<<<>>><<<<>><<<<>>><<>>>><<<>>><<<<>><<<<><>>>><<><<>>><<>>><<<<>><>><<<<>><<<<><<>>><<<>><<<<>>><<<>>><<<<>>>><<<<>>>><<<><>>><<>>><<>><<>>><>><<<>>><<<><>>>><<><<<>><<<<>><<<>><>><>>>><<<<><<<>>><>><>><<>>>><<<>><>>>><<>>><<>><<>><<<<>><<<>>>><>>><<<>>><>>><<<<>><<<<><>><<>>>><<<<>>>><<<<>>>><>>><<<>><<<<>>>><<>>>><<>>>><<<>><<<><<<>>><<<><>>><<<>>><<>>><<<<>>>><>>><<<<>><<<>>><<>>>><<<<><<<<><<><>><<<>><>><>><<<><<<>>><>>><><<<>>><>>>><<>>><<>>>><<>>><<<<>><<>>><<<><<><>><<<<>><>>><<<<>>>><>><<<>><<<<>>>><<><<<<>>><<<>><<<>><<<<>>><>><<<>><<<<>>>><>><<<><<>><>>><<<<>>><<<>>>><><<<><<<>>>><<>>>><<><<<><<<>>><<><<<<>>><<<<>>>><>>><><>>>><<<>>><>><<<<>>>><>>>><>><<<<>>>><<<<>>><>>>><<>>>><<><<<<><<>>>><<<>><<<>>>><<><<<>>><<><><<><<<<>>><<>>><<<>>><<<<>><<>>><<<<>><<<><<>>>><<<><>>><<>>>><<<><<<>>><<>>>><<<<>><>>><>>>><<<<>>>><<<>>>><<<>>><>><<<>>><<<<>><><<><>><><>><<>>><<>>>><<<<>>><<<>><<<>><<<><>><<<>>>><<><>><>>>><<<<>>>><<>><<><<<>><<<>><>>>><<>><<<<><<<<><<<><<<>>><<<>>><>><<<<><<<<>>><<<>>>><<>><<<<>>><<<>>><>>>><>>>><><<<<>><<>>><<>>>><<<<><<>>>><<<>>><<<>><<><<<>>>><<<>>><<<>>><><>><<<>><<<<>>>><<<<>>><<<<><<>>>><<<<><<<>>>><<<<>><<<<><>><<>>>><><>>>><<<<>>>><<<>><<<>><<<<>>><<>><<<<>><>><<>>><<<>>>><<<<>>><<<<>>><<><<<<>>>><><<>>><<>>>><<<><<><>>>><<>>>><<>><<<<><>><<>>><><<<<>>><<<<>><>>><<<>><<>>>><<>>><<<>><<><<>>><<<>>>><><><<<>><><>>>><>>><<<<><<<>>><>><<<<><<>>>><<<<>><<<><<<<>>>><>>><>><<<<>><<<<>>>><<<<>>>><<<<>>><>>><<<>>>><<<>><<>>>><<<>>>><<<<>>>><<<<>><>><<<<>><<<<>>><<<<>>><<<><<<>><<>><<<<>>>><<<<>>><<<>><>>>><<<>>>><<><>><<<<><<<<><<>>>><<>>><<<>>><<<><<>><><<<<>><>>>><>>><<<>>><><<<><<>>>><<<<>>><<>>><<>><<>><<<<>>>><<>>><>>><>><<>><<<>>><<>><>>>><<<><>><<<<>>>><><<>>>><<<><<>>><><<<<>>>><<<><<<>>><<<>>><<<<>>>><<<<>>><<<><<>>><>>><<>>>><><>>><<<<>>>><>>>><<<>>>><<<<>><<<><>>><<<<>>><>><<>>>><<>>>><<>>><<>>><<<>>>><<<<>><>>><<>>><<>><<<>>><<<><<<>><<>><>>><<<<><<<<>>><<><<<>>><<<>>><<><<<<>><><<<<>>><>><<<<><<>><<>>>><<<<><<<<>>>><<<>><<<<>>><<<<>>>><<<>>><>>><<<<>>>><<><<<><<>>><<<<><<<<>><<<<>><<<<>><<<"
}
